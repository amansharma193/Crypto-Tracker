{"version":3,"sources":["Coin.js","App.js","index.js"],"names":["Coin","name","image","symbol","market_cap","current_price","total_volume","price_change_percentage_24h","className","style","margin","width","borderBottom","alt","src","toUpperCase","toLocaleString","isNaN","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","fetch","then","response","json","data","catch","err","console","log","filteredCoins","filter","coin","toLowerCase","includes","onChange","e","target","value","type","placeholder","map","id","ReactDOM","render","document","getElementById"],"mappings":"mOAgDeA,EA7CF,SAAC,GAA+F,IAA9FC,EAA6F,EAA7FA,KAAMC,EAAuF,EAAvFA,MAAOC,EAAgF,EAAhFA,OAAQC,EAAwE,EAAxEA,WAAYC,EAA4D,EAA5DA,cAAcC,EAA8C,EAA9CA,aAAaC,EAAiC,EAAjCA,4BACzE,OACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,MAAMC,MAAO,CAACC,OAAO,gBAAiBC,MAAM,MAAOC,aAAa,qBAA/E,UACE,qBAAKJ,UAAU,YAAf,SAEW,SAAPN,EACE,qBAAKM,UAAU,aAAaK,IAAI,SAASC,IAAKZ,IAE9C,wCAIN,qBAAKM,UAAU,YAAf,SACE,mBAAGA,UAAU,YAAb,SAA0BP,MAE5B,qBAAKO,UAAU,YAAf,SACE,mBAAGA,UAAU,cAAb,SAA4BL,EAAOY,kBAErC,qBAAKP,UAAU,YAAf,SACE,oBAAGA,UAAU,aAAb,cAA4BH,OAE9B,qBAAKG,UAAU,YAAf,SACE,oBAAGA,UAAU,cAAb,cAA6BJ,EAAWY,sBAE1C,qBAAKR,UAAU,YAAf,SAEIS,MAAMV,GACJ,sCAEDA,EAA4B,EAC7B,oBAAGC,UAAU,mBAAb,UAAkCD,EAA4BW,QAAQ,GAAtE,OAEE,oBAAGV,UAAU,qBAAb,UAAoCD,EAA4BW,QAAQ,GAAxE,SAIN,qBAAKV,UAAU,YAAf,SACE,oBAAGA,UAAU,kBAAb,cAAiCF,EAAaU,4BCwBzCG,EA7DH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRC,MAAM,4HACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIR,EAASQ,MAAOC,OAAM,SAACC,GACnCC,QAAQC,IAAI,QAAQF,QAiB1B,IAEF,IAIMG,EAAcd,EAAMe,QAAO,SAAAC,GAAI,OAAEA,EAAKpC,KAAKqC,cAAcC,SAAShB,EAAOe,kBAE/E,OACE,sBAAK9B,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,YAAb,4BACA,+BACE,uBAAOgC,SAXI,SAACC,GAClBjB,EAAUiB,EAAEC,OAAOC,QAUkBC,KAAK,OAAOC,YAAY,WAAWrC,UAAU,oBAGhF,cAAC,EAAD,CACEN,MAAM,QACN,KAAO,OACP,cAAgB,QAChB,OAAS,SACT,WAAa,iBACb,4BAA8B,sBAC9B,aAAe,UAPN,cAUTiC,EAAcW,KAAI,SAAAT,GAChB,OACE,cAAC,EAAD,eAAwBA,GAAbA,EAAKU,WCtD5BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8d493dbc.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Coin.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nconst Coin = ({name, image, symbol, market_cap, current_price,total_volume,price_change_percentage_24h}) => {\r\n  return (\r\n    <div className='coin-container'>\r\n      <div className='row' style={{margin:'18px auto 0px', width:'80%', borderBottom:'2px solid #d7d7d7'}}>\r\n        <div className='col-lg-1 '>\r\n          {\r\n            image!='Image' ? (\r\n              <img className='coin-image' alt='crypto' src={image} />\r\n            ):(\r\n              <p>Image</p>\r\n            )\r\n          }\r\n        </div>\r\n        <div className='col-lg-2 '>\r\n          <p className='coin-name'>{name}</p>\r\n        </div>\r\n        <div className='col-lg-1 '>\r\n          <p className='coin-symbol'>{symbol.toUpperCase()}</p>\r\n        </div>\r\n        <div className='col-lg-2 '>\r\n          <p className='coin-price'>${current_price}</p>\r\n        </div>\r\n        <div className='col-lg-3 '>\r\n          <p className='coin-volume'>${market_cap.toLocaleString()}</p>\r\n        </div>\r\n        <div className='col-lg-1 '>\r\n          {\r\n            isNaN(price_change_percentage_24h)?(\r\n              <p>Price</p>\r\n            ) :\r\n            (price_change_percentage_24h<0 ?(\r\n            <p className='coin-percent red' >{price_change_percentage_24h.toFixed(2)}%</p>)\r\n            :(\r\n              <p className='coin-percent green' >{price_change_percentage_24h.toFixed(2)}%</p>\r\n            ))\r\n          }\r\n        </div>\r\n        <div className='col-lg-2 '>\r\n          <p className='coin-market-cap'>${total_volume.toLocaleString()}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Coin;\r\n","import React, {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport Coin from './Coin';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nconst App = () => {\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\r\n        .then(response => response.json())\r\n        .then(data => setCoins(data)).catch((err)=>{\r\n          console.log('error',err)\r\n        })\r\n    // fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\r\n    //   .then(response => {\r\n    //     const data = response.json();\r\n\r\n    //       // check for error response\r\n    //       if (!response.ok) {\r\n    //           // get error message from body or default to response statusText\r\n    //           const error = (data && data.message) || response.statusText;\r\n    //           return Promise.reject(error);\r\n    //       }\r\n    //       console.log('data2',data);\r\n    //       setCoins(data);\r\n    //   }).catch(error => {\r\n    //     console.error('There was an error!', error);\r\n    //   });\r\n  },[])\r\n\r\n  const handleSearch=(e)=>{\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  const filteredCoins=coins.filter(coin=>coin.name.toLowerCase().includes(search.toLowerCase()))\r\n\r\n  return (\r\n    <div className='coin-app'>\r\n      <div className='coin-search'>\r\n        <p className='coin-text'>Crypto Tracker</p>\r\n        <form>\r\n          <input onChange={handleSearch} type='text' placeholder='Search: ' className='coin-input' />\r\n        </form>\r\n      </div>\r\n      <Coin key={'headerCoin'} {...{\r\n        image:'Image',\r\n        'name':'Name',\r\n        'current_price':'Price',\r\n        'symbol':'Symbol',\r\n        'market_cap':'Market Capital',\r\n        'price_change_percentage_24h':'Price Change (in %)',\r\n        'total_volume':'Volume'\r\n      }}/>\r\n      {\r\n        filteredCoins.map(coin=>{\r\n          return(\r\n            <Coin key={coin.id} {...coin}  />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}